/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import java.awt.Desktop;
import java.awt.image.ImageProducer;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.util.Arrays;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.nfunk.jep.JEP;
import javax.swing.*;
import metodos.Polynomial;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.XYSplineRenderer;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

/**
 * para realiar la grafica de interpolacion se hace uso de la s librerias
 * jmathplot y jmatharray
 *
 * @author Darwin
 */
public class Cubicos extends javax.swing.JFrame {

    Polynomial p = new Polynomial();
    private static int i, n;
    public static double componenteX[];
    public static double componenteY[];
    public static double dj[], cj[], bj[];

    public static int getN() {
        return n;
    }

    public static void setN(int n) {
        Cubicos.n = n;
    }

    public int getI() {
        return i;
    }

    public void setI(int i) {
        this.i = i;
    }

    /**
     * Creates new form InterpolacionPorSplinesCubicos
     */
    public Cubicos() {
        initComponents();
        jPanelMuestraGrafica.setVisible(false);
        puntosIngresados.setVisible(false);
        lblPuntos.setVisible(false);
        cmbGrados.setVisible(false);
        setLocationRelativeTo(null);
        setResizable(false);

        ((JPanel) getContentPane()).setOpaque(false);

        // al inicio del programa se muestran las casillas descativadas
        puntosIngresados.setEnabled(false);

    }

    public Cubicos(int g) {
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelMuestraGrafica = new javax.swing.JPanel();
        cmbfuncions = new javax.swing.JComboBox<>();
        puntosIngresados = new javax.swing.JTextField();
        lblPuntos = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea = new javax.swing.JTextArea();
        cmbGrados = new javax.swing.JComboBox<>();
        btnRegresar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImages(null);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cmbfuncions.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONE", "Ejercicio 1", "Ejercicio 5", "Ejercicio 7" }));
        cmbfuncions.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbfuncionsItemStateChanged(evt);
            }
        });
        getContentPane().add(cmbfuncions, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 200, -1));

        puntosIngresados.setEditable(false);
        getContentPane().add(puntosIngresados, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 100, 450, 30));

        lblPuntos.setForeground(new java.awt.Color(255, 255, 255));
        lblPuntos.setText("Puntos ingresados");
        getContentPane().add(lblPuntos, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 140, 50));

        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Polinomios S (x)");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 200, 100, 30));

        jTextArea.setEditable(false);
        jTextArea.setColumns(20);
        jTextArea.setRows(5);
        jScrollPane1.setViewportView(jTextArea);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 560, -1));

        cmbGrados.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONE", "grado 1", "grado 2", "grado 3" }));
        cmbGrados.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbGradosItemStateChanged(evt);
            }
        });
        getContentPane().add(cmbGrados, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 50, 160, -1));

        btnRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/_disabled__undo.png"))); // NOI18N
        btnRegresar.setBorderPainted(false);
        btnRegresar.setContentAreaFilled(false);
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });
        getContentPane().add(btnRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 10, 40, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fondo-negro.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 690, 400));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbfuncionsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbfuncionsItemStateChanged
        // TODO add your handling code here:
        lblPuntos.setVisible(true);
        puntosIngresados.setVisible(true);
        switch (cmbfuncions.getSelectedIndex()) {
            case 1:
                jTextArea.setText("");
                cmbGrados.setVisible(false);
                puntosIngresados.setText("(1910,125350), (1930,133420), (1950,117183), (1960, 120323), (1980, 145311)");
                double x[] = {1910, 1930, 1950, 1960, 1980};
                double y[] = {125350, 133420, 117183, 120323, 145311};
                this.splines(5, x, y);
                break;
            case 2:
                jTextArea.setText("");
                cmbGrados.setVisible(true);
                puntosIngresados.setText("(0,-1), (1,6), (2,31), (3,98)");
                break;
            case 3:
                jTextArea.setText("");
                cmbGrados.setVisible(false);
                puntosIngresados.setText("(-1,-6), (0,9), (2,6)");
                double x1[] = {-1, 0, 2};
                double y1[] = {-6, 9, 6};
                this.splines(3, x1, y1);
                break;
            default:
                break;
        }

    }//GEN-LAST:event_cmbfuncionsItemStateChanged

    private void cmbGradosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbGradosItemStateChanged
        // TODO add your handling code here:
        double x[] = {0, 1, 2, 3};
        double y[] = {-1, 6, 31, 98};
        
        switch (cmbGrados.getSelectedIndex()) {
            case 1:
                jTextArea.setText("");
                this.splines(4, x, y);
                break;
            case 2:
                jTextArea.setText("");
                this.splines(4, x, y);
                break;
            case 3:
                jTextArea.setText("");
                this.splines(4, x, y);
                break;
            default:
                break;
        }
    }//GEN-LAST:event_cmbGradosItemStateChanged

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        Home gn = new Home();
        gn.show();
        this.setVisible(false);
    }//GEN-LAST:event_btnRegresarActionPerformed

    public void splines(int n1, double x[], double y[]) {
        try {
            int puntos = n1;
            // AC=b
            double h[] = new double[puntos];

            for (int i = 0; i < puntos - 1; i++) {
                h[i] = x[i + 1] - x[i];
            }

            double b[] = new double[puntos];

            /**
             * paso a cargar la matriz b |- -| | 0 | | 3(x2-x1)/h1 - 3(x1-x0)/h0
             * | | . | | . | | . | =b, con i=0,...,n-1 | . | | 3(Xn -
             * Xn-1)/(hn-1) - 3(Xn-1 - Xn-2)/(hn-2) | | 0 | |- -|(n+1)x1
             */
            b[0] = 0;
            b[puntos - 1] = 0;
            for (int i = 1; i < puntos - 1; i++) {
                b[i] = ((3 / h[i]) * (y[i + 1] - y[i])) - ((3 / h[i - 1]) * (y[i] - y[i - 1]));

            }// fin cargar matriz b

            // 
            double matrizA[][] = new double[puntos][puntos];// de orden nxn, con i=0,...,n-1
            /**
             * |- -| | 1 0 ................................. 0 | | h0 2(h0+h1)
             * h1 ................ 0 | | 0 h1 2(h1+h2) h2 ................ 0 | |
             * 0 0 ..................... . 0 1 | | 0 0 hn-2 2(hn-2 +hn-1) hn-1 |
             * |- -| (n+1)x(n+1)
             *
             * A=matrizA, con i=0,...,n-1 *
             */
            matrizA[0][0] = 1;
            matrizA[puntos - 1][puntos - 1] = 1;

            for (int i = 1; i < puntos; i++) {
                matrizA[0][i] = 0;
            }
            for (int i = 0; i < puntos - 1; i++) {
                matrizA[puntos - 1][i] = 0;
            }

            // paso a cargar la matrizA  desde la fila i asta la fila n,  con  i=1,...n
            for (int i = 1; i < puntos; i++) {
                for (int j = 1; j < puntos - 1; j++) {

                    if (i == j) {
                        matrizA[i][j - 1] = h[j - 1];
                        matrizA[i][j] = 2 * (h[j - 1] + h[j]);
                        matrizA[i][j + 1] = h[j];
                    }

                }// fin buqle j

            }// fin bucle i
            // fin cargar la matirzA 

            /**
             * la matrizA1 es de dimension (puntos-2)x(puntos-2), usada para
             * resolver el sistema de e uaciones para en contrar las incognitas
             * cj de la matriz C Note que por las condiciones de frotera las
             * componentes Cjo=0 y Cjn=0
             */
            double matrizA1[][] = new double[puntos - 2][puntos - 2];
            for (int i = 0; i < puntos - 2; i++) {
                for (int j = 0; j < puntos - 2; j++) {
                    matrizA1[i][j] = matrizA[i + 1][j + 1];
                }// fin buqle j
            }// bucle i

            int n = puntos - 2;
            double r[] = new double[n];// carreglo que almacenara los valores de Cji  desde i=1,...,n-2
            for (int l = 0; l < n; l++) {
                r[l] = b[l + 1];

            }

            /**
             * acontinuacion usamos el metodo de caus jordan para encontar los
             * valores de Cji desde i=1,...,n-2
             */
            double d, c1;
            for (int i = 0; i <= n - 1; i++) {
                d = matrizA1[i][i];
                for (int s = 0; s <= n - 1; s++) {
                    matrizA1[i][s] = ((matrizA1[i][s]) / d);
                }
                r[i] = ((r[i]) / d);
                for (int x1 = 0; x1 <= n - 1; x1++) {
                    if (i != x1) {
                        c1 = matrizA1[x1][i];
                        for (int y1 = 0; y1 <= n - 1; y1++) {
                            matrizA1[x1][y1] = matrizA1[x1][y1] - c1 * matrizA1[i][y1];
                        }
                        r[x1] = r[x1] - c1 * r[i];
                    }// fin if
                }/// buble x1
            }// fin bucle i

            /**
             * nesitamos que la matriz C sea de la forma
             *
             * |- -| | 0 | | 1 | | 1 | | . | | . | =C | . | | . | | 1 | | 0 | |-
             * -|(n+1)x1 Note que por las condiciones de frotera las componentes
             * Cjo=0 y Cjn=0
             */
            double cj[] = new double[puntos];
            cj[0] = 0;
            cj[puntos - 1] = 0;
            for (int i = 1; i < puntos - 1; i++) {
                cj[i] = r[i - 1];
            }

            /**
             * los polinomios de Splin cubicos esta dadas por la siguiente
             * expresion Sj(X)=aj+bj(x-xj)+cj(x-xj)^2 +dj(x-xj)^3, donde las
             * aj=y[j]
             */
            double bj[] = new double[puntos - 1];
            double dj[] = new double[puntos - 1];
            for (int i = 0; i < puntos - 1; i++) {
                bj[i] = ((y[i + 1] - y[i]) / h[i]) - ((h[i] * (2 * cj[i] + cj[i + 1])) / 3);
                dj[i] = (cj[i + 1] - cj[i]) / (3 * h[i]);
            }

            String fun = "";
            jTextArea.setText("");
            for (int j = 0; j < puntos - 1; j++) {
                String signo = "-";
                if (x[j] < 0) {
                    signo = "";

                }
                //3er grado
                if (cmbGrados.getSelectedIndex() == 3 || cmbfuncions.getSelectedIndex() == 1 || cmbfuncions.getSelectedIndex() == 3) {
                    fun = (y[j] + " + (" + bj[j] + ")(x" + j + signo + x[j] + ")  +  (" + cj[j] + ")(x" + j + signo + x[j] + ")^2 + ( " + dj[j] + ")(x" + j + signo + x[j] + ")^3");
                    String ec = p.poli(fun);
                    jTextArea.append(ec + "\n");
                } //2do grado
                else if (cmbGrados.getSelectedIndex() == 2) {
                    fun = ("(" + bj[j] + ")(" + j + signo + x[j] + ")  +  (" + cj[j] + ")(x" + j + signo + x[j] + ")+ ( " + dj[j] + ")(x" + j + signo + x[j] + ")^2");
                    String ec1 = p.poli(fun);
                    jTextArea.append(ec1 + "\n");
                } //1er grado
                else if (cmbGrados.getSelectedIndex() == 1) {
                    fun = ("(" + cj[j] + ")(x" + j + signo + x[j] + ")+ ( " + dj[j] + ")(x" + j + signo + x[j] + ")");
                    String ec2 = p.poli(fun);
                    jTextArea.append(ec2 + "\n");
                }
            }

            Cubicos.cj = cj;
            Cubicos.bj = bj;
            Cubicos.dj = dj;

        } // try // try // try // try
        catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error lectura de datos");
        }

    }// fin del metodo splines

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cubicos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cubicos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cubicos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cubicos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cubicos().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegresar;
    private javax.swing.JComboBox<String> cmbGrados;
    private javax.swing.JComboBox<String> cmbfuncions;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JPanel jPanelMuestraGrafica;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea;
    private javax.swing.JLabel lblPuntos;
    private javax.swing.JTextField puntosIngresados;
    // End of variables declaration//GEN-END:variables
}
